#In order to read config from config server, you have to use bootstrap.properties instead of application.properties
#Provide name of application and URI of config server from where to read configuration.
#Renamed application.properties to .bak. To be able to not use config server, delete bootstrap and rename backback file to application.properties
#Bootstrapping also means that config changes woon't come into effect unless this microservice is restarted.
#Which would be a problem if there are multiple environments for this service, each having multiple instances.


#This must match with the config file name in config server (minus evironment name)
spring.application.name=limits-service

spring.cloud.config.uri=http://localhost:8888

#If no profile (dev/qa/prod etc) is specified, default profile will be used
# Profile can be set in other ways as well, for instance, VM arguments.
spring.profiles.active=qa

#For registering with Eureka Naming server.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/